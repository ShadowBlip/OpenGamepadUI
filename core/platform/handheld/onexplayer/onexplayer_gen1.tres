[gd_resource type="Resource" script_class="HandheldPlatform" load_steps=30 format=3 uid="uid://hbki3lawed3e"]

[ext_resource type="Script" path="res://core/systems/input/sysfs_device.gd" id="1_xukjt"]
[ext_resource type="Script" path="res://core/systems/input/events/evdev_key_event.gd" id="2_wal8b"]
[ext_resource type="Script" path="res://core/platform/handheld/handheld_platform.gd" id="4_yyql1"]

[sub_resource type="Resource" id="Resource_r7met"]
script = ExtResource("1_xukjt")
phys_path = "usb-0000:00:14.0-9/input0"
name = "OneXPlayer Gamepad"

[sub_resource type="Resource" id="Resource_021fm"]
script = ExtResource("2_wal8b")
code = "KEY_MUTE"

[sub_resource type="Resource" id="Resource_ubaf4"]
script = ExtResource("2_wal8b")
code = "KEY_MUTE"

[sub_resource type="GDScript" id="GDScript_5auqi"]
script/source = "@icon(\"res://assets/editor-icons/mind-map.svg\")
extends MappableEvent
class_name HandheldEventMapping

## Name of the event to emit
@export var name: String
## List of events that will trigger this MappedEvent.
@export var activation_keys: Array[EvdevEvent]
## Emits this event when the activation keys are triggered
@export var emits: MappableEvent

## Will show logger statements in the event log with the prefix [HandheldEventMapping].
var logger := Log.get_logger(\"HandheldEventMapping\", Log.LEVEL.INFO)


## Checks if the given Array of EvdevEvents matches the activation_keys array.
func output_events_match(active_event: Array[EvdevEvent]) -> bool:
#	logger.debug(\"Checking active events against event list.\")
	if active_event.size() != activation_keys.size() or active_event.size() == 0:
#		logger.debug(\"Event list too short\")
		return false
	for i in active_event.size():
		if not active_event[i].matches(activation_keys[i]):
#			logger.debug(\"Event list doesn't match active event\")
			return false
	return true


## Checks if the given Array of EvdevEvents matches the activation_keys array.
func trigger_events_match(active_keys: Array[EvdevEvent]) -> bool:
#	logger.debug(\"Checking active keys against key actvation keys.\")
	if active_keys.size() != activation_keys.size() or active_keys.size() == 0:
#		logger.debug(\"Event list too short. Active_keys.size():\" + str(active_keys.size()) + \" Activation_keys.size(): \" + str(activation_keys.size()))
		return false
	for i in active_keys.size():
#		logger.debug(\"Checking event \" + str(active_keys[i].get_event_type()) + \" \" + str(active_keys[i].get_event_code()))
#		logger.debug(\"Against event \" + str(activation_keys[i].get_event_type()) + \" \" + str(activation_keys[i].get_event_code()))
		if not activation_keys[i].matches(active_keys[i]):
#			logger.debug(\"Activation list doesn't match active keys.\")
			return false
	return true
"

[sub_resource type="Resource" id="Resource_orvbw"]
script = SubResource("GDScript_5auqi")
name = "Mute"
activation_keys = Array[Resource("res://core/systems/input/events/evdev_event.gd")]([SubResource("Resource_021fm")])
emits = SubResource("Resource_ubaf4")

[sub_resource type="Resource" id="Resource_efbap"]
script = ExtResource("2_wal8b")
code = "KEY_VOLUMEUP"

[sub_resource type="Resource" id="Resource_skaxw"]
script = ExtResource("2_wal8b")
code = "KEY_VOLUMEUP"

[sub_resource type="Resource" id="Resource_dck4a"]
script = SubResource("GDScript_5auqi")
name = "Volume Up"
activation_keys = Array[Resource("res://core/systems/input/events/evdev_event.gd")]([SubResource("Resource_efbap")])
emits = SubResource("Resource_skaxw")

[sub_resource type="Resource" id="Resource_l8u3c"]
script = ExtResource("2_wal8b")
code = "KEY_VOLUMEDOWN"

[sub_resource type="Resource" id="Resource_d2nwm"]
script = ExtResource("2_wal8b")
code = "KEY_VOLUMEDOWN"

[sub_resource type="Resource" id="Resource_2imxn"]
script = SubResource("GDScript_5auqi")
name = "Volume Down"
activation_keys = Array[Resource("res://core/systems/input/events/evdev_event.gd")]([SubResource("Resource_l8u3c")])
emits = SubResource("Resource_d2nwm")

[sub_resource type="Resource" id="Resource_tvs2f"]
script = ExtResource("2_wal8b")
code = "KEY_O"

[sub_resource type="Resource" id="Resource_vrnek"]
script = ExtResource("2_wal8b")
code = "KEY_RIGHTCTRL"

[sub_resource type="Resource" id="Resource_1at0l"]
script = ExtResource("2_wal8b")
code = "KEY_LEFTMETA"

[sub_resource type="Resource" id="Resource_a72xl"]
script = ExtResource("2_wal8b")
code = "KEY_KEYBOARD"

[sub_resource type="Resource" id="Resource_uxras"]
script = SubResource("GDScript_5auqi")
name = "KB (Short Press)"
activation_keys = Array[Resource("res://core/systems/input/events/evdev_event.gd")]([SubResource("Resource_tvs2f"), SubResource("Resource_vrnek"), SubResource("Resource_1at0l")])
emits = SubResource("Resource_a72xl")

[sub_resource type="Resource" id="Resource_oarvo"]
script = ExtResource("2_wal8b")
code = "KEY_D"

[sub_resource type="Resource" id="Resource_hjp4b"]
script = ExtResource("2_wal8b")
code = "KEY_LEFTMETA"

[sub_resource type="Resource" id="Resource_ggnan"]
script = ExtResource("2_wal8b")
code = "BTN_BASE"

[sub_resource type="Resource" id="Resource_2dph6"]
script = SubResource("GDScript_5auqi")
name = "OXP (Short Press)"
activation_keys = Array[Resource("res://core/systems/input/events/evdev_event.gd")]([SubResource("Resource_oarvo"), SubResource("Resource_hjp4b")])
emits = SubResource("Resource_ggnan")

[sub_resource type="Resource" id="Resource_vg0ed"]
script = ExtResource("2_wal8b")
code = "KEY_RIGHTCTRL"

[sub_resource type="Resource" id="Resource_t78hk"]
script = ExtResource("2_wal8b")
code = "KEY_RIGHTALT"

[sub_resource type="Resource" id="Resource_fvwef"]
script = ExtResource("2_wal8b")
code = "KEY_DELETE"

[sub_resource type="Resource" id="Resource_62ea8"]
script = ExtResource("2_wal8b")
code = "BTN_BASE2"

[sub_resource type="Resource" id="Resource_1kjkk"]
script = SubResource("GDScript_5auqi")
name = "KB + OXP"
activation_keys = Array[Resource("res://core/systems/input/events/evdev_event.gd")]([SubResource("Resource_vg0ed"), SubResource("Resource_t78hk"), SubResource("Resource_fvwef")])
emits = SubResource("Resource_62ea8")

[sub_resource type="Resource" id="Resource_4ysgf"]
script = ExtResource("1_xukjt")
phys_path = "isa0060/serio0/input0"
name = "AT Translated Set 2 keyboard"

[resource]
script = ExtResource("4_yyql1")
key_map = Array[SubResource("GDScript_5auqi")]([SubResource("Resource_orvbw"), SubResource("Resource_dck4a"), SubResource("Resource_2imxn"), SubResource("Resource_uxras"), SubResource("Resource_2dph6"), SubResource("Resource_1kjkk")])
filtered_events = Array[Resource("res://core/systems/input/events/evdev_event.gd")]([])
keypads = Array[ExtResource("1_xukjt")]([SubResource("Resource_4ysgf")])
gamepad = SubResource("Resource_r7met")
icon_mappings = Array[Resource("res://core/platform/handheld/handheld_icon_mapping.gd")]([])
thermal_policy_path = ""
name = ""
startup_actions = Array[Resource("res://core/platform/actions/platform_action.gd")]([])
shutdown_actions = Array[Resource("res://core/platform/actions/platform_action.gd")]([])
