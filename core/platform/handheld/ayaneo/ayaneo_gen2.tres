[gd_resource type="Resource" script_class="HandheldPlatform" load_steps=29 format=3 uid="uid://cq2afdo742vjq"]

[ext_resource type="Script" path="res://core/systems/input/sysfs_device.gd" id="1_sxb4s"]
[ext_resource type="Script" path="res://core/systems/input/events/evdev_key_event.gd" id="2_y36u3"]
[ext_resource type="Script" path="res://core/platform/handheld/handheld_platform.gd" id="4_vgjqj"]

[sub_resource type="Resource" id="Resource_gwcbt"]
script = ExtResource("1_sxb4s")
phys_path = "usb-0000:03:00.3-4/input0"
name = "Microsoft X-Box 360 pad"

[sub_resource type="Resource" id="Resource_ksrde"]
script = ExtResource("2_y36u3")
code = "KEY_VOLUMEUP"

[sub_resource type="Resource" id="Resource_pynbt"]
script = ExtResource("2_y36u3")
code = "KEY_VOLUMEUP"

[sub_resource type="GDScript" id="GDScript_5auqi"]
script/source = "@icon(\"res://assets/editor-icons/mind-map.svg\")
extends MappableEvent
class_name HandheldEventMapping

## Name of the event to emit
@export var name: String
## List of events that will trigger this MappedEvent.
@export var activation_keys: Array[EvdevEvent]
## Emits this event when the activation keys are triggered
@export var emits: MappableEvent

## Will show logger statements in the event log with the prefix [HandheldEventMapping].
var logger := Log.get_logger(\"HandheldEventMapping\", Log.LEVEL.INFO)


## Checks if the given Array of EvdevEvents matches the activation_keys array.
func output_events_match(active_event: Array[EvdevEvent]) -> bool:
#	logger.debug(\"Checking active events against event list.\")
	if active_event.size() != activation_keys.size() or active_event.size() == 0:
#		logger.debug(\"Event list too short\")
		return false
	for i in active_event.size():
		if not active_event[i].matches(activation_keys[i]):
#			logger.debug(\"Event list doesn't match active event\")
			return false
	return true


## Checks if the given Array of EvdevEvents matches the activation_keys array.
func trigger_events_match(active_keys: Array[EvdevEvent]) -> bool:
#	logger.debug(\"Checking active keys against key actvation keys.\")
	if active_keys.size() != activation_keys.size() or active_keys.size() == 0:
#		logger.debug(\"Event list too short. Active_keys.size():\" + str(active_keys.size()) + \" Activation_keys.size(): \" + str(activation_keys.size()))
		return false
	for i in active_keys.size():
#		logger.debug(\"Checking event \" + str(active_keys[i].get_event_type()) + \" \" + str(active_keys[i].get_event_code()))
#		logger.debug(\"Against event \" + str(activation_keys[i].get_event_type()) + \" \" + str(activation_keys[i].get_event_code()))
		if not activation_keys[i].matches(active_keys[i]):
#			logger.debug(\"Activation list doesn't match active keys.\")
			return false
	return true
"

[sub_resource type="Resource" id="Resource_krc84"]
script = SubResource("GDScript_5auqi")
name = "Volume Up"
activation_keys = Array[Resource("res://core/systems/input/events/evdev_event.gd")]([SubResource("Resource_ksrde")])
emits = SubResource("Resource_pynbt")

[sub_resource type="Resource" id="Resource_j8ifh"]
script = ExtResource("2_y36u3")
code = "KEY_VOLUMEDOWN"

[sub_resource type="Resource" id="Resource_5kiqp"]
script = ExtResource("2_y36u3")
code = "KEY_VOLUMEDOWN"

[sub_resource type="Resource" id="Resource_kfxia"]
script = SubResource("GDScript_5auqi")
name = "Volume Down"
activation_keys = Array[Resource("res://core/systems/input/events/evdev_event.gd")]([SubResource("Resource_j8ifh")])
emits = SubResource("Resource_5kiqp")

[sub_resource type="Resource" id="Resource_e5qhq"]
script = ExtResource("2_y36u3")
code = "KEY_KPENTER"

[sub_resource type="Resource" id="Resource_hpe38"]
script = ExtResource("2_y36u3")
code = "KEY_LEFT"

[sub_resource type="Resource" id="Resource_qnbxs"]
script = ExtResource("2_y36u3")
code = "KEY_COPY"

[sub_resource type="Resource" id="Resource_vt8ps"]
script = ExtResource("2_y36u3")
code = "BTN_MODE"

[sub_resource type="Resource" id="Resource_ewnjs"]
script = SubResource("GDScript_5auqi")
name = "Aya Space"
activation_keys = Array[Resource("res://core/systems/input/events/evdev_event.gd")]([SubResource("Resource_e5qhq"), SubResource("Resource_hpe38"), SubResource("Resource_qnbxs")])
emits = SubResource("Resource_vt8ps")

[sub_resource type="Resource" id="Resource_w24iw"]
script = ExtResource("2_y36u3")
code = "KEY_APOSTROPHE"

[sub_resource type="Resource" id="Resource_dt4ei"]
script = ExtResource("2_y36u3")
code = "KEY_COPY"

[sub_resource type="Resource" id="Resource_ko31g"]
script = ExtResource("2_y36u3")
code = "BTN_BASE"

[sub_resource type="Resource" id="Resource_dddtb"]
script = SubResource("GDScript_5auqi")
name = "Small Buttton"
activation_keys = Array[Resource("res://core/systems/input/events/evdev_event.gd")]([SubResource("Resource_w24iw"), SubResource("Resource_dt4ei")])
emits = SubResource("Resource_ko31g")

[sub_resource type="Resource" id="Resource_2ib3x"]
script = ExtResource("2_y36u3")
code = "KEY_F12"

[sub_resource type="Resource" id="Resource_0reoq"]
script = ExtResource("2_y36u3")
code = "KEY_RIGHTCTRL"

[sub_resource type="Resource" id="Resource_hkkrh"]
script = ExtResource("2_y36u3")
code = "KEY_LEFTMETA"

[sub_resource type="Resource" id="Resource_fblhk"]
script = SubResource("GDScript_5auqi")
name = "Aya Space"
activation_keys = Array[Resource("res://core/systems/input/events/evdev_event.gd")]([SubResource("Resource_2ib3x"), SubResource("Resource_0reoq"), SubResource("Resource_hkkrh")])

[sub_resource type="Resource" id="Resource_ygouk"]
script = ExtResource("2_y36u3")
code = "KEY_D"

[sub_resource type="Resource" id="Resource_xiupp"]
script = ExtResource("2_y36u3")
code = "KEY_LEFTMETA"

[sub_resource type="Resource" id="Resource_0lfuq"]
script = SubResource("GDScript_5auqi")
name = "Small Buttton"
activation_keys = Array[Resource("res://core/systems/input/events/evdev_event.gd")]([SubResource("Resource_ygouk"), SubResource("Resource_xiupp")])

[sub_resource type="Resource" id="Resource_4vawq"]
script = ExtResource("1_sxb4s")
phys_path = "isa0060/serio0/input0"
name = "AT Translated Set 2 keyboard"

[resource]
script = ExtResource("4_vgjqj")
key_map = Array[SubResource("GDScript_5auqi")]([SubResource("Resource_krc84"), SubResource("Resource_kfxia"), SubResource("Resource_ewnjs"), SubResource("Resource_dddtb"), SubResource("Resource_fblhk"), SubResource("Resource_0lfuq")])
filtered_events = Array[Resource("res://core/systems/input/events/evdev_event.gd")]([])
keypads = Array[ExtResource("1_sxb4s")]([SubResource("Resource_4vawq")])
gamepad = SubResource("Resource_gwcbt")
icon_mappings = Array[Resource("res://core/platform/handheld/handheld_icon_mapping.gd")]([])
thermal_policy_path = ""
name = ""
startup_actions = Array[Resource("res://core/platform/actions/platform_action.gd")]([])
shutdown_actions = Array[Resource("res://core/platform/actions/platform_action.gd")]([])
