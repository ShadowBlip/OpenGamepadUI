#!/usr/bin/env python
from SCons import __version__ as scons_raw_version
import os
import sys

# Define path to godot-cpp dependency
godot_cpp_path = "godot-cpp"
if 'GODOT_CPP_PATH' in os.environ:
    godot_cpp_path = os.environ['GODOT_CPP_PATH']

# Setup a standard path to output the extension
EXT_PATH = "../addons/{}/bin/lib{}{}{}"

# Setup the environments from godot-cpp
env = SConscript(godot_cpp_path + "/SConstruct")
dbus_env = env.Clone()
thread_env = env.Clone()
pty_env = env.Clone()
unixsock_env = env.Clone()
xlib_env = env.Clone()


# --- godot-dbus ---

# tweak this if you want to use different folders, or more folders, to store your source code in.
dbus_env.Append(CPPPATH=["godot-dbus/src/"])
dbus_sources = Glob("godot-dbus/src/*.cpp")

# Include dependency libraries for dbus
if 'PKG_CONFIG_PATH' in os.environ:
    dbus_env['ENV']['PKG_CONFIG_PATH'] = os.environ['PKG_CONFIG_PATH']
dbus_env.ParseConfig("pkg-config dbus-1 --cflags --libs")

# Build the shared library
libdbus = dbus_env.SharedLibrary(
    EXT_PATH.format(
        "dbus", "dbus", dbus_env["suffix"], dbus_env["SHLIBSUFFIX"]
    ),
    source=dbus_sources,
)

Default(libdbus)


# --- godot-linuxthread ---

# tweak this if you want to use different folders, or more folders, to store your source code in.
thread_env.Append(CPPPATH=["godot-linuxthread/src/"])
thread_sources = Glob("godot-linuxthread/src/*.cpp")

# Build the shared library
libthread = thread_env.SharedLibrary(
    EXT_PATH.format("linuxthread",
                    "linuxthread", thread_env["suffix"], thread_env["SHLIBSUFFIX"]),
    source=thread_sources,
)

Default(libthread)


# --- godot-pty ---

# tweak this if you want to use different folders, or more folders, to store your source code in.
pty_env.Append(CPPPATH=["godot-pty/src/"])
pty_sources = Glob("godot-pty/src/*.cpp")

# Build the shared library
libpty = pty_env.SharedLibrary(
    EXT_PATH.format("pty",
                    "pty", pty_env["suffix"], pty_env["SHLIBSUFFIX"]),
    source=pty_sources,
)

Default(libpty)


# --- godot-unix-socket ---

# tweak this if you want to use different folders, or more folders, to store your source code in.
unixsock_env.Append(CPPPATH=["godot-unix-socket/src/"])
unixsock_sources = Glob("godot-unix-socket/src/*.cpp")

# Build the shared library
libunixsock = unixsock_env.SharedLibrary(
    EXT_PATH.format("unixsock",
                    "unixsock", unixsock_env["suffix"], unixsock_env["SHLIBSUFFIX"]),
    source=unixsock_sources,
)

Default(libunixsock)


# --- godot-unix-socket ---

# tweak this if you want to use different folders, or more folders, to store your source code in.
xlib_env.Append(CPPPATH=["godot-xlib/src/"])
xlib_sources = Glob("godot-xlib/src/*.cpp")

# Include dependency libraries for the extension
if 'PKG_CONFIG_PATH' in os.environ:
    xlib_env['ENV']['PKG_CONFIG_PATH'] = os.environ['PKG_CONFIG_PATH']
xlib_env.ParseConfig("pkg-config x11 --cflags --libs")
xlib_env.ParseConfig("pkg-config xres --cflags --libs")
xlib_env.ParseConfig("pkg-config xtst --cflags --libs")
xlib_env.ParseConfig("pkg-config xi --cflags --libs")

# Build the shared library
libx11 = xlib_env.SharedLibrary(
    EXT_PATH.format("xlib",
                    "xlib", xlib_env["suffix"], xlib_env["SHLIBSUFFIX"]),
    source=xlib_sources,
)

Default(libx11)
